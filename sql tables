CREATE TABLE Customers(
    customerID       int         Not Null,
    subscriptionType VARCHAR(20) Not Null,
    customerType     VARCHAR(12) Not Null,
    phone            VARCHAR(11) Not Null,
    email            VARCHAR(30) Not Null,
    startDate        date 		 Not Null,
    Constraint Customers_pk Primary Key (customerID)
    );
	
Create Table Address(
    customerID  int         Not Null,
    addressType             Not Null,
    zipCode     int         Not Null,

    Constraint Address_pk Primary Key (customerID, addressType, streetName, zipCode),
    Constraint Address_Customers_fk Foreign Key (customerID) References Customers (customerID),
    Constraint Address_AddressType_fk Foreign Key (addressType) References AddressTypes (addressType),
    Constraint Address_ZipLocations_fk Foreign Key (zipCode) References ZipLocations (zipCode)

    );
	
Create Table AddressTypes(
    addressType     Not Null,
    Constraint AddressTypes_pk Primary Key (addressType)
    );
Create Table Corporations(
    customerID int  Not Null,
    corpName        Not Null,
    corpType        Not Null,
    Constraint Corporations_pk Primary Key (customerID),
    Constraint  Corporations_Customers_fk Foreign Key (customerID) References Customers (customerID)
    );

CREATE TABLE Individuals(
    customerID  VARCHAR(4)  Not Null,
    iFirstName              Not Null,
    iLastName               Not Null,
    iDOB    	date        Not Null,
    Constraint Individuals_pk Primary Key (customerID),
	Constraint Individuals_Customers_fk Foreign Key (customerID) References Customers (customerID)
    );

CREATE TABLE SteadyCustomers(
    customerID          VARCHAR(4)  Not Null,

    loyaltyPoints                   Not Null,
    upgradeSubscription VARCHAR(10) Not Null,
    Constraint SteadyCustomers_pk Primary Key (customerID),
	Constraint SteadyCustomers_Customers_fk Foreign Key (customerID) References Customers (customerID)

    );

CREATE TABLE EmployeeCustomers(
    customerID          VARCHAR(4) Not Null,
    discountPercent     INT NOT NULL,
    discountAvailable   VARCHAR(3) Not Null,
    Constraint EmployeeCustomers_pk Primary Key (customerID),
	Constraint EmployeeCustomers_Customers_fk Foreign Key (customerID) References Customers (customerID)
    );
/*
    Discount percent is a 3-digit num, but if
    Available is "no" then percent can be null
*/

CREATE TABLE PremierCustomers(
    customerID          VARCHAR(3)  Not Null,
    paymentPerMonth     VARCHAR(3)  Not Null,
    fiveYearEstimate                Not Null,
    paymentDueDate      VARCHAR(10) Not Null,
    Constraint PremierCustomers_pk Primary Key (customerID),
	Constraint PremierCustomers_Customers_fk Foreign Key (customerID) References Customers (customerID)
    );
/* KEY DIFFERENCES IN PREM CUST COMPARED TO RELATIONSHIP SCHEME!!! */

CREATE TABLE Referrals(
    customerID   VARCHAR(4)  Not Null,
    prospectID   VARCHAR(4)  Not Null,

	pFirstName               Not Null,
    pLastName                Not Null,
    referralDate VARCHAR(10) Not Null,

    rewardType               Not Null,
    Constraint Referrals_pk Primary Key (prospectID),
	Constraint Referrals_Customers_fk Foreign Key (customerID) References Customers (customerID)
    ); -- names can be many characters so no var char
	
Create Table ContactType(
    prospectID  VARCHAR(4)  Not Null,
    contactType             Not Null,
    contact,
    Constraint ContactType_pk Primary Key (prospectID, contactType),
	Constraint ContactType_Referrals_fk Foreign Key (prospectID) References Referrals (prospectID)
    );
	
CREATE TABLE ProspectiveMembers(
    prospectID      VARCHAR(4)  Not Null,
    deadProspect    VARCHAR(3)  Not Null,
    Constraint ProspectiveMembers_pk Primary Key (prospectID),
	Constraint ProspectiveMembers_Referrals_fk Foreign Key (prospectID) References Referrals (prospectID)
    );
/*
    dead prospect clarification, is it yes or no, or 1 - 3?
*/

CREATE TABLE ProspectAlerts(
    prospectID  VARCHAR(4)  Not Null,
    date        date 		Not Null,
    contactType VARCHAR(5)  Not Null,
    Constraint ProspectAlerts_pk Primary Key (prospectID, date),
	Constraint ProspectAlerts_ProspectiveMembers_fk Foreign Key (prospectID) References ProspectiveMembers (prospectID)
    );

CREATE TABLE Profits(
    customerID      VARCHAR(4)  Not Null,
    incomeEarned    VARCHAR(6)  Not Null,
    Constraint Profits_pk Primary Key (customerID),
	Constraint Profits_Customers_fk Foreign Key (customerID) References Customers (customerID)
    ); --maybe something costs 6 figures? haha

CREATE TABLE Invoices(
    invoiceID   VARCHAR(4)  Not Null,
    customerID  VARCHAR(4)  Not Null,
    vehicleID   VARCHAR(4)  Not Null,
    visitDate   date        Not Null,
    total       VARCHAR(5)  Not Null,
    Constraint Invoices_pk Primary Key (invoiceID),
	Constraint Invoices_Profits_fk Foreign Key (customerID) References Profits (customerID),
	Constraint Invoices_MaintenanceVisits_fk Foreign Key (vehicleID, visitDate) References MaintenanceVisits (vehicleID, visitDate)
    );

CREATE TABLE MaintenanceVisits(
    vehicleID       VARCHAR(4)  Not Null,
    visitDate       date        Not Null,
	employeeID		VARCHAR(4)	Not Null,
    currentMile     VARCHAR(7)  Not Null,
    milePerYear     VARCHAR(7)  Not Null,
    packageSelect   VARCHAR(10) Not Null,
    Constraint MaintenanceVisits_pk Primary Key (vehicleID, visitDate),
	Constraint MaintenanceVisits_CustomerVehicles_fk Foreign Key (vehicleID) References CustomerVehicles (vehicleID)
    );

CREATE TABLE CustomerVehicles(
    customerID          VARCHAR(4)  Not Null,
    vehicleID           VARCHAR(4)  Not Null,
    make                VARCHAR(10) Not Null,
    model               VARCHAR(10) Not Null,
    year                date        Not Null,
    maintenanceInterval VARCHAR(8)  Not Null,
    milePerYear         VARCHAR(7)  Not Null,
    currentMile         VARCHAR(7)  Not Null,
    accident            VARCHAR(15) Not Null,
    scheduleFriendly,
    lastVisitDate       VARCHAR(10),
    Constraint CustomerVehicles_pk
    Primary Key (vehicleID);
    );

CREATE TABLE  CustomerAlerts(
    vehicleID   VARCHAR(4) Not Null,
    appointment	datetime   Not Null, --Format: yyyy-mm-ddThh:mm:ss
    alertType   VARCHAR(5) Not Null,
    Constraint CustomerAlerts_pk
    Primary Key (vehicleID, aDate);
    );

CREATE TABLE Employees (
    employeeID  VARCHAR(4)  Not Null,
    eFirstName  Not Null,
    eLastName   Not Null,
    jobTitle    VARCHAR(10) Not Null,
    startDate   VARCHAR(10) Not Null,
    eDOB        VARCHAR(10) Not Null,

    zipCode     VARCHAR(7)  Not Null,  

    Constraint Employees_pk
    Primary Key (employeeID);
    );

CREATE TABLE ZipLocations(
    zipCode VARCHAR(7)  Not Null,
    city                Not Null,
    state               Not Null,
    streetName		Not Null,
    Constraint ZipLocations_pk 

    Primary Key (zipCode);
    );
Create Table States(
    state   Not Null,
    Constraint States_pk
    Primary Key (state);
    );
Create Table Technicians(
    employeeID  VARCHAR(4) Not Null,
    tLanguage,
    workStation Not Null,
    Constraint Technicians_pk
    Primary Key (employeeID);
    );

CREATE TABLE MaintenancePackages(
    packageID   VARCHAR(4) Not Null,
    packageName            Not Null,
    vehicleID   VARCHAR(4) Not Null,
    Constraint MaintenancePackages_pk
    Primary Key (packageID);
    );
Create Table MaintenanceItems(
    itemID      VARCHAR(4)  Not Null,
    itemName    VARCHAR(20) Not Null,
    itemPrice   DECIMAL(4,2) Not Null,
    loyaltyPointPayable     Not Null,
    requiredSkill           Not Null,
    packageID   VARCHAR(4)  Not Null,
    Constraint MaintenanceItem_pk
    Primary Key (itemID);
    /*
        skill stuff here
    */
    );
Create Table VisitItems(
    employeeID  VARCHAR(4) Not Null,
    vehicleID   VARCHAR(4) Not Null,
    visitDate   date       Not Null,
    itemID      VARCHAR(4) Not Null,
    Constraint VisitItem_pk
    Primary Key (employeeID, vehicleID, visitDate, itemID);
    );
/*
Create Table Items(

    itemName    VARCHAR(20) Not Null,
    );
*/
Crea
    );
Create Table Skills(
    employeeID  VARCHAR(4) Not Null,
    skillName              Not Null,
    skillProficiency       Not Null,
    Constraint Skills_pk
    Primary Key (employeeID, skillName);
    );
Create Table SkillProficiencies(
    skillProficiency    Not Null,
    Constraint SkillProficiencies_pk
    Primary Key (skillProficiency);
    );
Create Table SkillNames(
    skillName   Not Null,
    Constraint SkillNames_pk
    Primary Key (skillName);
    );
Create Table Apprenticeship(
    mentorID    VARCHAR(4)  Not Null,
    menteeID    VARCHAR(4)  Not Null,
    startDate   VARCHAR(10) Not Null,
    active                  Not Null,
    mentoredSkill           Not Null,
    Constraint Apprenticeship_pk
    Primary Key (mentorID, menteeID, startDate);
    );
